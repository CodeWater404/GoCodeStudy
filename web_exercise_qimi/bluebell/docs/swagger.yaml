basePath: /api/v1/
definitions:
  controller._ResponsePostList:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/controller.ResCode'
        description: 业务响应状态码
      data:
        description: 数据
        items:
          $ref: '#/definitions/models.ApiPostDetail'
        type: array
      message:
        description: 提示信息
        type: string
    type: object
  controller.ResCode:
    enum:
    - 1000
    - 1001
    - 1002
    - 1003
    - 1004
    - 1005
    - 1006
    - 1007
    type: integer
    x-enum-varnames:
    - CodeSuccess
    - CodeInvalidParam
    - CodeUserExist
    - CodeUserNotExist
    - CodeInvalidPassword
    - CodeServerBusy
    - CodeNeedLogin
    - CodeInvalidToken
  models.ApiPostDetail:
    properties:
      author_id:
        type: integer
      author_name:
        description: 作者
        type: string
      community:
        allOf:
        - $ref: '#/definitions/models.CommunityDetail'
        description: 嵌入社区结构体
      community_id:
        type: integer
      content:
        type: string
      create_time:
        type: string
      id:
        description: 类型相同的字段可以放在一块，内存对齐，d减少内存占用
        example: "0"
        type: string
      status:
        type: integer
      title:
        type: string
      vote_num:
        description: 投票数
        type: integer
    required:
    - community_id
    - content
    - title
    type: object
  models.CommunityDetail:
    properties:
      create_time:
        type: string
      id:
        type: integer
      introduction:
        description: omitempty 如果为空则不返回
        type: string
      name:
        type: string
    type: object
host: http://localhost:8080/
info:
  contact:
    name: CodeWater
    url: https://github.com/codewater404/GoCodeStudy/
  description: 基于Gin + Gorm + Redis的论坛项目
  termsOfService: http://swagger.io/terms/
  title: bluebell项目接口文档
  version: "1.0"
paths:
  /api/v1/post:
    post:
      consumes:
      - application/json
      description: 创建帖子,需要登录,会放入数据库和redis中
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 可以为空
        example: 0
        in: query
        name: community_id
        type: integer
      - description: 排序依据
        example: score
        in: query
        name: order
        type: string
      - description: 页码
        example: 1
        in: query
        name: page
        type: integer
      - description: 每页数据量
        example: 10
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 创建帖子
      tags:
      - 帖子相关接口
  /api/v1/post/{id}:
    get:
      consumes:
      - application/json
      description: 获取帖子详情，会展示帖子内容
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      - description: 查询参数，帖子id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 获取帖子详情
      tags:
      - 帖子相关接口
  /api/v1/posts:
    get:
      consumes:
      - application/json
      description: 获取帖子列表,会展示帖子内容
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 获取帖子列表
      tags:
      - 帖子相关接口
  /api/v1/posts2:
    get:
      consumes:
      - application/json
      description: 获取帖子列表,会展示帖子内容,可以按照时间或者分数排序,默认按照时间排序,可以指定社区,不指定社区就是查所有的帖子
      parameters:
      - description: Bearer 用户令牌
        in: header
        name: Authorization
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller._ResponsePostList'
      security:
      - ApiKeyAuth: []
      summary: 获取帖子列表[新]
      tags:
      - 帖子相关接口
swagger: "2.0"
